// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using store_application.API.models.Data;

namespace store_application.API.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20200825021246_RemovedKey")]
    partial class RemovedKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("store_application.API.models.Category", b =>
                {
                    b.Property<int>("catID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("catName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("catID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("store_application.API.models.Product", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("categorycatID")
                        .HasColumnType("int");

                    b.HasKey("ProdId");

                    b.HasIndex("categorycatID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("store_application.API.models.Product", b =>
                {
                    b.HasOne("store_application.API.models.Category", "category")
                        .WithMany("Products")
                        .HasForeignKey("categorycatID");
                });
#pragma warning restore 612, 618
        }
    }
}
